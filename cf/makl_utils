#
# $Id: makl_utils,v 1.9 2005/08/05 13:47:49 stewy Exp $
#

# makl_err exit_code err_string
#
#   Print the supplied error string to stderr and bail out with the given 
#   exit code.
#   $1 - exit code
#   $2 - error string
#   No return value.
#
makl_err ()
{
    local exit_code=$1
    shift

    echo 1>&2 "$0: [err]: $*"
    exit ${exit_code}
}

# makl_dbg dbg_string
#
#   Print the supplied debug message to stderr if "makl_debug" variable is set
#   to "true", "yes", "on" or '1'.
#   $1 - debug string
#   No return value.
#
makl_dbg ()
{
    case ${makl_debug} in
        [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1)
            echo 1>&2 "$0: [dbg]: $*"
            ;;
    esac
}

# makl_warn warning_string
#
#   Print the supplied warning message to stderr.
#   $1 - warning string
#   No return value.
#
makl_warn ()
{
    echo 1>&2 "$0: [wrn]: $*"
}

# makl_dbg_globals
#
#   Print MaKL global variables in use to stderr if 'makl_debug' is set.
#   No return value.
#
makl_dbg_globals ()
{
    makl_dbg "MAKL_DIR: ${MAKL_DIR}"
    makl_dbg "makl_run_dir: ${makl_run_dir}"
    makl_dbg "makl_conf_h: ${makl_conf_h}"
    makl_dbg "makl_makefile_conf: ${makl_makefile_conf}"
}

# makl_upper string1 ... stringn
#
#   Transform lower into upper case letters.
#   $* - list of 0 or more strings to be converted
#   No return value.
#
makl_upper ()
{
   echo $* | tr "[a-z]" "[A-Z]"
}

# makl_cleanup_rundir
#
#   Remove ${makl_run_dir}
#   No return value.
#
makl_cleanup_rundir ()
{
    rm -rf ${makl_run_dir}
}

# makl_yesno question
#
#   Present 'question' at terminal and wait the user to answer.
#   $1 - question string
#   Return '0' if [yY] was typed, '1' if [nN].
#
makl_yesno ()
{
    echo -n "$1 " 
    
    while [ /bin/true ]; do 
        read answer
        case ${answer} in
            [Yy])
                return 0
                ;;
            [nN])
                return 1
                ;;
            *)
                echo -n "please say [yY] or [nN]: "
                ;;
        esac
    done
}
