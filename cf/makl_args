#
# $Id: makl_args,v 1.5 2005/08/30 18:08:04 stewy Exp $
#

# makl_args_print
# 
#   Print out a command-line argument description.
#   $1 - id
#   $2 - pms
#   $3 - DFT
#   $4 - dsc
#   $5 - ID
#   $6 - DSC
#   $7 - PFX
#   No return value.
#
makl_args_print () 
{
    local   id=$1 
            pms=$2
            dsc=$3
            ID=$4
            DFT=$5
            PFX=$6
            DSC=$7

    a=`echo -n "${PFX}  --${id}${pms}" | 
        sed 's/X/'"${ID}"'/'`

    if [ -z "${DSC}" ]; then
        b=`echo -n "${dsc}" | 
            sed 's/X/'"${ID}"'/'`
    else
        b=`echo -n "${dsc}" | 
            sed 's/X/'"${DSC}"'/'`
    fi

    echo -n ${a}"    "${b}
    [ "${DFT}" = " " ] || echo -n " [${DFT}]"
    echo
}

# makl_args_def args_str
#
#   Define a command line argument with multiple strings
#   $@ - argument strings
#   No return value.
#
makl_args_def ()
{
    local file=${makl_run_dir}/args

    makl_tab_set_row ${file} "$@"
}

# makl_var_set
#
#   Set or unset a variable.
#   $1 - type
#   $2 - variable name 
#   $3 - 1:set, 0:unset
#   $4 - variable value
#   No return value.
#
makl_var_set ()
{
    local file=${makl_run_dir}/vars_$1
    [ -e ${file} ] || touch ${file}

    makl_tab_set ${file} "$2" 2 "$3"
    makl_tab_set ${file} "$2" 3 "$4"
}

# makl_var_get
# 
#   Get the value of an internal cf variable.
#   $1 - type of variable
#   $2 - variable name 
#   0 if the element was found, 1 otherwise.
#
makl_var_get ()
{
    local file=${makl_run_dir}/vars_$1
    
    makl_tab_get ${file} $2 3
    return $?
}

# makl_args_add id 
#
#   Add an argument instance with given arguments.
#   $1 - argument id 
#   $2 - argument value
#   $3 - default value
#   $4 - prefix
#   $5 - arg description
#   No return value.
# 
makl_args_add ()
{
    local file=${makl_run_dir}/args
    
    makl_tab_find ${file} $1 || makl_err 2 "Argument not defined: $1"
    makl_tab_set ${file}_$1 $2 2 $3 
    makl_tab_set ${file}_$1 $2 3 $4
    makl_tab_set ${file}_$1 $2 4 $5
}
