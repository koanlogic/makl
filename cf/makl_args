#
# $Id: makl_args,v 1.3 2005/08/05 13:47:49 stewy Exp $
#

#   $1 - id
#   $2 - pms
#   $3 - dsc
#   $4 - ID
#   $5 - DSC
#   $6 - pfx
#   $7 - dft
makl_args_print () 
{
    a=`echo -n "$6  --$1$2" | 
        sed 's/X/'"$4"'/'`

    if [ -z "$5" ]; then
        b=`echo "$3" | 
            sed 's/X/'"$4"'/'`
    else
        b=`echo "$3" | 
            sed 's/X/'"$5"'/'`
    fi

    echo ${a}"    "${b}
}

# makl_args_def args_str
#
#   Define a command line argument with multiple strings
#   $@ - argument strings
#   No return value.
#
makl_args_def ()
{
    local file=${makl_run_dir}/args

    makl_tab_set_row ${file} "$@"
}

# makl_var_set
#
#   Set or unset a variable.
#   $1 - type
#   $2 - variable name 
#   $3 - 1:set, 0:unset
#   $4 - variable value
#   No return value.
#
makl_var_set ()
{
    local file=${makl_run_dir}/vars_$1
    [ -e ${file} ] || touch ${file}

    makl_tab_set ${file} "$2" 2 $3
    makl_tab_set ${file} "$2" 3 $4
}

# get the value of an internal cf variable 
makl_var_get ()
{
    local file=${makl_run_dir}/vars_$1
    
    makl_tab_get ${file} $2 3
    return $?
}

# makl_args_add id 
#
#   Add an argument instance with given arguments.
#   $1 - argument id 
#   $2 - argument value
#   $3 - default value
#   $4 - prefix
#   $5 - arg description
#   No return value.
# 
makl_args_add ()
{
    local file=${makl_run_dir}/args
    
    makl_tab_find ${file} $1 || makl_err 2 "Argument not defined: $1"
    makl_tab_set ${file}_$1 $2 2 $3 
    makl_tab_set ${file}_$1 $2 3 $4
    makl_tab_set ${file}_$1 $2 4 "$5"
}
