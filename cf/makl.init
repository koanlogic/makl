#
# $Id: makl.init,v 1.29 2007/06/26 14:36:40 tho Exp $
#

# read in just once
if [ -z "${_makl_inited}" ]; then

_makl_inited="YES"

# "MAKL_DIR" is read from the shell env (it's MaKL bootstrap value)
if [ -z "${MAKL_DIR}" ]; then
    echo "MAKL_DIR value must be set in the shell environment"
    exit 1
fi

# when playing with makl nutshells, MAKL_ETC (i.e. where toolchain belongs)
# can be arbitrarily set by the user
MAKL_ETC=${MAKL_ETC:-${MAKL_DIR}/etc}

# set globals to sensible defaults if not already set
makl_makefile_conf="${makl_makefile_conf:-`pwd`/Makefile.conf}"
makl_conf_h="${makl_conf_h:-`pwd`/conf.h}"
makl_run_dir="${makl_run_dir:-`pwd`/.makl.run}"

if [ ! -r ${MAKL_ETC}/toolchain.cf ]; then
    echo "missing toolchain.cf !"
    exit 1
fi

# create a fresh makl run dir
if [ -d ${makl_run_dir} ]; then
    rm -rf ${makl_run_dir} || exit 1
fi
mkdir -p ${makl_run_dir} || exit 1

# save the environment 
env > ${makl_run_dir}/env

# source makl functions and configuration
for shenv in ${MAKL_DIR}/cf/makl_* \
        ${MAKL_DIR}/cf/helpers/makl_* \
        ${MAKL_ETC}/toolchain.cf \
        ${MAKL_DIR}/etc/vars.cf \
        ${MAKL_DIR}/etc/args.cf \
        ${MAKL_DIR}/etc/funcs.cf; do
    [ -f ${shenv} ] && . ${shenv} 2> /dev/null
done

# show global variables' values
makl_dbg_globals

# pass the control to the user.
fi
