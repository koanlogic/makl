#
# $Id: Makefile,v 1.24 2006/12/01 07:55:11 tho Exp $
#
# User Variables:
# - MAKLRC      file name for hosting MaKL env variables
# - LOGIN_SHELL user shell
# - MAKL_SHLIB  shared library file
# - MAKL_TC     toolchain file
#
# Available targets:
#   all help hints toolchain env install uninstall clean

# this one needs to be exported in the 'toolchain' target
export MAKL_DIR := $(shell pwd)

# these are available after 'toolchain' actions
-include etc/toolchain.mk
-include etc/map.mk

# this will be available after the 'configure' stage
-include Makefile.conf

MAKL_VERSION = $(shell cat $(MAKL_DIR)/VERSION)

# set sensible defaults if not already set by the user
LOGIN_SHELL ?= sh
MAKLRC ?= $(MAKL_DIR)/makl.env

# catchall and 'help' targets display a menu of available options
all help:
	@echo
	@echo "# MaKL version $(MAKL_VERSION) - (c) 2005-2006 - KoanLogic srl"
	@echo "Available targets:"
	@echo
	@echo "   * help        print this menu"
	@echo "   * hints       output environment variables"
	@echo "   * toolchain   install platform toolchain files"
	@echo "   * rc          generate a file containing runtime MaKL variables"
	@echo "   * env         same as 'rc' but interactively"
	@echo "   * clean       remove autogenerated toolchain files"
	@echo "   * install     install a system wide MaKL (needs configure step)"
	@echo "   * uninstall   delete MaKL installed objects from host"
	@echo

# 'toolchain' target does shared libs and toolchain installation for the 
# host platform
toolchain:
	@setup/shlib_setup.sh $(MAKL_PLATFORM)
	@setup/toolchain_setup.sh $(MAKL_PLATFORM)

# 'env' (interactively) and 'rc' (unattendedly) targets create a suitable 
# (i.e. user login shell specific) $MAKLRC file
env rc:
	@interactive=0 ; \
	[ "$(MAKECMDGOALS)" = env ] && interactive=1 ; \
	setup/env_setup.sh $(MAKL_DIR) $(MAKL_VERSION) $(LOGIN_SHELL) \
        $(MAKLRC) $$interactive

# hints displays suggested env variables settings 
hints:
	@setup/shell_setup.sh $(MAKL_DIR)

# 'install' needs the configure step and 'toolchain' target as dependencies
install: $(MAKL_DIR)/Makefile.conf toolchain
	@$(MAKE) -I$(MAKL_DIR)/mk -C bin/ install ; \
	$(MKINSTALLDIRS) $(MAKL_ROOT) ; \
	for d in VERSION cf/ mk/ tc/ etc/ shlib/ helpers/ setup/ ; do  \
		cp -r $$d $(MAKL_ROOT)/$$d ;    \
	done

# warn if the configure step has not been already performed
$(MAKL_DIR)/Makefile.conf:
	@echo "first you have to run ./configure --gnu_make=..." && exit 1

# 'uninstall' target removes MaKL installed files
uninstall: Makefile.conf
	@$(MAKE) -I$(MAKL_DIR)/mk -C bin/ uninstall
	@rm -rf $(MAKL_ROOT)

# remove files possibly created by other targets (env, rc, toolchain) and
# by the configure step
clean:
	rm -f $(MAKLRC)
	rm -f $(MAKL_DIR)/etc/toolchain.mk
	rm -f $(MAKL_DIR)/etc/toolchain.cf
	rm -f $(MAKL_DIR)/mk/priv/shlib.mk
	rm -f Makefile.conf
